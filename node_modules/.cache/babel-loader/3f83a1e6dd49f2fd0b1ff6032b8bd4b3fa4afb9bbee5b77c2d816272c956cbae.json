{"ast":null,"code":"// // src/redux/reducers.js\n// import { combineReducers } from 'redux';\n\n// const initialState = {\n//   todos: [],\n// };\n\n// const todoReducer = (state = initialState, action) => {\n\n//   switch (action.type) {\n//     case 'ADD_TODO':\n//       return {\n//         ...state,\n//         todos: [...state.todos, action.payload],\n//       };\n//     case 'REMOVE_TODO':\n//       return {\n//         ...state,\n//         todos: state.todos.filter((todo) => todo.id !== action.payload),\n//       };\n//       case 'EDIT_TODO':\n//         const { id, newText } = action.payload;\n\n//         const updatedTodos = state.todos.map((todo) =>\n//           todo.id === id ? { ...todo, text: newText } : todo\n//         );\n\n//         return {\n//           ...state,\n//           todos: updatedTodos,\n//         };\n//         case 'GET_TODO':\n//             return {\n//             ...state,\n//             todos:action.payload\n\n//         }\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   todos: todoReducer,\n// });\n\n// import { GET_TODOS_ERROR, GET_TODOS_REQUEST, GET_TODOS_SUCCESS,ADD_TODOS_REQUEST,ADD_TODOS_ERROR,ADD_TODOS_SUCCESS } from \"./actionTypes\";\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  isError: false\n};\n\n//complete the reducer function \nconst reducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case 'GET_TODOS_REQUEST':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case 'GET_TODOS_SUCCESS':\n      return {\n        ...state,\n        todos: payload,\n        isError: false,\n        isLoading: false\n      };\n    case 'GET_TODOS_ERROR':\n      return {\n        ...state,\n        isError: true,\n        isLoading: false\n      };\n    case 'ADD_TODO':\n      return {\n        ...state,\n        todos: [...state.todos, payload]\n      };\n  }\n  return state;\n};\nexport { reducer };","map":{"version":3,"names":["initialState","todos","isLoading","isError","reducer","state","type","payload"],"sources":["/home/sameeramp/Videos/ReactTodo/todo/src/redux/reducers.js"],"sourcesContent":["// // src/redux/reducers.js\n// import { combineReducers } from 'redux';\n\n\n// const initialState = {\n//   todos: [],\n// };\n\n// const todoReducer = (state = initialState, action) => {\n  \n//   switch (action.type) {\n//     case 'ADD_TODO':\n//       return {\n//         ...state,\n//         todos: [...state.todos, action.payload],\n//       };\n//     case 'REMOVE_TODO':\n//       return {\n//         ...state,\n//         todos: state.todos.filter((todo) => todo.id !== action.payload),\n//       };\n//       case 'EDIT_TODO':\n//         const { id, newText } = action.payload;\n  \n//         const updatedTodos = state.todos.map((todo) =>\n//           todo.id === id ? { ...todo, text: newText } : todo\n//         );\n  \n//         return {\n//           ...state,\n//           todos: updatedTodos,\n//         };\n//         case 'GET_TODO':\n//             return {\n//             ...state,\n//             todos:action.payload\n\n//         }\n        \n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   todos: todoReducer,\n// });\n\n// import { GET_TODOS_ERROR, GET_TODOS_REQUEST, GET_TODOS_SUCCESS,ADD_TODOS_REQUEST,ADD_TODOS_ERROR,ADD_TODOS_SUCCESS } from \"./actionTypes\";\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  isError: false,\n};\n\n//complete the reducer function \nconst reducer = (state = initialState,{type,payload}) => {\nswitch(type){\ncase 'GET_TODOS_REQUEST':\n  return{\n    ...state,\n    isLoading:true,\n    isError: false,\n  }\n   case 'GET_TODOS_SUCCESS':\n    return {\n      ...state,\n      todos:payload,\n      isError: false,\n      isLoading: false,\n    }\n    case 'GET_TODOS_ERROR':\n      return {\n        ...state,\n        isError:true,\n        isLoading: false,\n      }\n     \n      case 'ADD_TODO':\n              return {\n              ...state,\n              todos: [...state.todos, payload],\n          };\n       \n}\n  return state;\n};\n\nexport { reducer };\n"],"mappings":"AAAA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAMA,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAC;EAACM,IAAI;EAACC;AAAO,CAAC,KAAK;EACzD,QAAOD,IAAI;IACX,KAAK,mBAAmB;MACtB,OAAM;QACJ,GAAGD,KAAK;QACRH,SAAS,EAAC,IAAI;QACdC,OAAO,EAAE;MACX,CAAC;IACA,KAAK,mBAAmB;MACvB,OAAO;QACL,GAAGE,KAAK;QACRJ,KAAK,EAACM,OAAO;QACbJ,OAAO,EAAE,KAAK;QACdD,SAAS,EAAE;MACb,CAAC;IACD,KAAK,iBAAiB;MACpB,OAAO;QACL,GAAGG,KAAK;QACRF,OAAO,EAAC,IAAI;QACZD,SAAS,EAAE;MACb,CAAC;IAED,KAAK,UAAU;MACP,OAAO;QACP,GAAGG,KAAK;QACRJ,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAK,EAAEM,OAAO;MACnC,CAAC;EAEX;EACE,OAAOF,KAAK;AACd,CAAC;AAED,SAASD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}