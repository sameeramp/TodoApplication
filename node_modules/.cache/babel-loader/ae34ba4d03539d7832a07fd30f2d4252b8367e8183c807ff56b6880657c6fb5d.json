{"ast":null,"code":"import axios from 'axios';\nexport const GetTodofn = payload => {\n  return {\n    type: 'GET_TODOS_SUCCESS',\n    payload\n  };\n};\n_c = GetTodofn;\nexport const GetTodoLoadingfn = () => {\n  return {\n    type: 'GET_TODOS_REQUEST'\n  };\n};\n_c2 = GetTodoLoadingfn;\nexport const GetTodoErrorfn = () => {\n  return {\n    type: 'GET_TODOS_ERROR'\n  };\n};\n_c3 = GetTodoErrorfn;\nlet getdata = () => {\n  dispatch(GetTodoLoadingfn());\n  axios.get(`http://localhost:3004/todos`).then(function (response) {\n    // handle success\n    dispatch(GetTodofn(response.data));\n  }).catch(function (error) {\n    // handle error\n    dispatch(GetTodoErrorfn());\n    console.log(error);\n  });\n};\nexport const addTodoFunction = title => dispatch => {\n  dispatch({\n    type: 'GET_TODOS_REQUEST'\n  });\n  return axios.post('http://localhost:3004/todos', {\n    title\n  }).then(res => {\n    dispatch({\n      type: 'ADD_TODOS_SUCCESS',\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: 'GET_TODOS_ERROR'\n    });\n  });\n};\nexport const deleteTodoFunction = id => dispatch => {\n  dispatch({\n    type: 'GET_TODOS_REQUEST'\n  });\n  return axios.delete(`http://localhost:3004/todos/${id}`).then(() => {\n    dispatch({\n      type: 'REMOVE_TODO',\n      payload: id\n    });\n  }).catch(err => {\n    dispatch({\n      type: 'GET_TODOS_ERROR'\n    });\n  });\n};\nexport const editTodoFunction = (id, newText) => dispatch => {\n  dispatch({\n    type: 'GET_TODOS_REQUEST'\n  });\n  return axios.put(`http://localhost:3004/todos/${id}`, {\n    title: newText\n  }).then(res => {\n    dispatch({\n      type: 'EDIT_TODO',\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: 'GET_TODOS_ERROR'\n    });\n  });\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GetTodofn\");\n$RefreshReg$(_c2, \"GetTodoLoadingfn\");\n$RefreshReg$(_c3, \"GetTodoErrorfn\");","map":{"version":3,"names":["axios","GetTodofn","payload","type","_c","GetTodoLoadingfn","_c2","GetTodoErrorfn","_c3","getdata","dispatch","get","then","response","data","catch","error","console","log","addTodoFunction","title","post","res","err","deleteTodoFunction","id","delete","editTodoFunction","newText","put","$RefreshReg$"],"sources":["/home/sameeramp/Videos/ReactTodo/todo/src/redux/actions.js"],"sourcesContent":["import axios from 'axios'\n\nexport const GetTodofn=(payload)=>{\nreturn{\n    type:'GET_TODOS_SUCCESS',\n    payload\n}\n}\nexport const GetTodoLoadingfn=()=>{\n    return{\n        type:'GET_TODOS_REQUEST'\n       \n    }\n}\nexport const GetTodoErrorfn=()=>{\n    return{\n        type:'GET_TODOS_ERROR'\n       \n    }\n}\n\nlet getdata=()=>{\n    dispatch(GetTodoLoadingfn())\n    axios.get(`http://localhost:3004/todos`)\n    .then(function (response) {\n      // handle success\n      dispatch(GetTodofn(response.data));\n    })\n    .catch(function (error) {\n      // handle error\n      dispatch(GetTodoErrorfn())\n      console.log(error);\n    })\n  }\n\n    export const addTodoFunction = (title) => (dispatch) => {\n            dispatch({type:'GET_TODOS_REQUEST'});\n          return axios.post('http://localhost:3004/todos',{title}).then((res) => {\n              \n                dispatch({type:'ADD_TODOS_SUCCESS', payload:res.data});\n            }).catch((err) => {\n                dispatch({type:'GET_TODOS_ERROR'});\n            });\n        };\n\n        export const deleteTodoFunction = (id) =>  (dispatch) => {\n            \n            dispatch({type:'GET_TODOS_REQUEST'});\n          return  axios.delete(`http://localhost:3004/todos/${id}`).then(() => {\n                dispatch({type:'REMOVE_TODO', payload:id});\n            }).catch((err) => {\n                dispatch({type:'GET_TODOS_ERROR'});\n            });\n        };\n        export const editTodoFunction = (id, newText) =>  (dispatch) => {\n            \n            dispatch({type:'GET_TODOS_REQUEST'});\n          return  axios.put(`http://localhost:3004/todos/${id}`,{title:newText}).then((res) => {\n                dispatch({type:'EDIT_TODO', payload:res.data});\n            }).catch((err) => {\n                dispatch({type:'GET_TODOS_ERROR'});\n            });\n        };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}